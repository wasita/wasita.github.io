{
  "version": 3,
  "sources": ["../../@iconify/svelte/dist/functions.js", "../../@iconify/svelte/dist/Icon.svelte"],
  "sourcesContent": ["'use strict';\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  ...defaultIconSizeCustomisations,\n  ...defaultIconTransformations\n});\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  attributes.viewBox = box.left.toString() + \" \" + box.top.toString() + \" \" + boxWidth.toString() + \" \" + boxHeight.toString();\n  return {\n    attributes,\n    body\n  };\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n      \"$1\" + newID + suffix + \"$3\"\n    );\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    resources,\n    path: source.path || \"/\",\n    maxURL: source.maxURL || 500,\n    rotate: source.rotate || 750,\n    timeout: source.timeout || 5e3,\n    random: source.random === true,\n    index: source.index || 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\n\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {\n  }\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {\n  }\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {\n  }\n}\n\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\n\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */ new Set(),\n  session: /* @__PURE__ */ new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\n\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  browserStorageConfig[key] = false;\n}\n\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = (index) => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && callback(data, index)) {\n        return true;\n      }\n    } catch (err) {\n    }\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\n\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, (item) => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(\n        provider,\n        prefix\n      );\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\n\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (lastValue && lastValue >= lastModified) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, (item) => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (!setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(\n      func,\n      browserCachePrefix + index.toString(),\n      JSON.stringify(item)\n    );\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data) => {\n          if (typeof data !== \"object\") {\n            item.icons.forEach((name) => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(\n                storage,\n                data\n              );\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach((name) => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const { provider, prefix } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\n\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToURL(svg) {\n  return 'url(\"data:image/svg+xml,' + encodeSVGforURL(svg) + '\")';\n}\n\nconst defaultExtendedIconCustomisations = {\n    ...defaultIconCustomisations,\n    inline: false,\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Style modes\n */\nconst commonProps = {\n    display: 'inline-block',\n};\nconst monotoneProps = {\n    'background-color': 'currentColor',\n};\nconst coloredProps = {\n    'background-color': 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    image: 'var(--svg)',\n    repeat: 'no-repeat',\n    size: '100% 100%',\n};\nconst propsToAddTo = {\n    '-webkit-mask': monotoneProps,\n    'mask': monotoneProps,\n    'background': coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + '-' + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Generate icon from properties\n */\nfunction render(\n// Icon must be validated before calling this function\nicon, \n// Properties\nprops) {\n    const customisations = mergeCustomisations(defaultExtendedIconCustomisations, props);\n    // Check mode\n    const mode = props.mode || 'svg';\n    const componentProps = (mode === 'svg' ? { ...svgDefaults } : {});\n    if (icon.body.indexOf('xlink:') === -1) {\n        delete componentProps['xmlns:xlink'];\n    }\n    // Create style if missing\n    let style = typeof props.style === 'string' ? props.style : '';\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'onLoad':\n            case 'mode':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Color: copy to style, add extra ';' in case style is missing it\n            case 'color':\n                style =\n                    style +\n                        (style.length > 0 && style.trim().slice(-1) !== ';'\n                            ? ';'\n                            : '') +\n                        'color: ' +\n                        value +\n                        '; ';\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            default:\n                if (key.slice(0, 3) === 'on:') {\n                    // Svelte event\n                    break;\n                }\n                // Copy missing property if it does not exist in customisations\n                if (defaultExtendedIconCustomisations[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    const renderAttribs = item.attributes;\n    // Inline display\n    if (customisations.inline) {\n        // Style overrides it\n        style = 'vertical-align: -0.125em; ' + style;\n    }\n    if (mode === 'svg') {\n        // Add icon stuff\n        Object.assign(componentProps, renderAttribs);\n        // Style\n        if (style !== '') {\n            componentProps.style = style;\n        }\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\n        let localCounter = 0;\n        let id = props.id;\n        if (typeof id === 'string') {\n            // Convert '-' to '_' to avoid errors in animations\n            id = id.replace(/-/g, '_');\n        }\n        // Generate HTML\n        return {\n            svg: true,\n            attributes: componentProps,\n            body: replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifySvelte'),\n        };\n    }\n    // Render <span> with style\n    const { body, width, height } = icon;\n    const useMask = mode === 'mask' ||\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n    // Generate SVG\n    const html = iconToHTML(body, {\n        ...renderAttribs,\n        width: width + '',\n        height: height + '',\n    });\n    // Generate style\n    const url = svgToURL(html);\n    const styles = {\n        '--svg': url,\n    };\n    const size = (prop) => {\n        const value = renderAttribs[prop];\n        if (value) {\n            styles[prop] = fixSize(value);\n        }\n    };\n    size('width');\n    size('height');\n    Object.assign(styles, commonProps, useMask ? monotoneProps : coloredProps);\n    let customStyle = '';\n    for (const key in styles) {\n        customStyle += key + ': ' + styles[key] + ';';\n    }\n    componentProps.style = customStyle + style;\n    return {\n        svg: false,\n        attributes: componentProps,\n    };\n}\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    initBrowserStorage();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\n/**\n * Check if component needs to be updated\n */\nfunction checkIconState(icon, state, mounted, callback, onload) {\n    // Abort loading icon\n    function abortLoading() {\n        if (state.loading) {\n            state.loading.abort();\n            state.loading = null;\n        }\n    }\n    // Icon is an object\n    if (typeof icon === 'object' &&\n        icon !== null &&\n        typeof icon.body === 'string') {\n        // Stop loading\n        state.name = '';\n        abortLoading();\n        return { data: { ...defaultIconProps, ...icon } };\n    }\n    // Invalid icon?\n    let iconName;\n    if (typeof icon !== 'string' ||\n        (iconName = stringToIcon(icon, false, true)) === null) {\n        abortLoading();\n        return null;\n    }\n    // Load icon\n    const data = getIconData(iconName);\n    if (!data) {\n        // Icon data is not available\n        // Do not load icon until component is mounted\n        if (mounted && (!state.loading || state.loading.name !== icon)) {\n            // New icon to load\n            abortLoading();\n            state.name = '';\n            state.loading = {\n                name: icon,\n                abort: loadIcons([iconName], callback),\n            };\n        }\n        return null;\n    }\n    // Icon data is available\n    abortLoading();\n    if (state.name !== icon) {\n        state.name = icon;\n        if (onload && !state.destroyed) {\n            onload(icon);\n        }\n    }\n    // Add classes\n    const classes = ['iconify'];\n    if (iconName.prefix !== '') {\n        classes.push('iconify--' + iconName.prefix);\n    }\n    if (iconName.provider !== '') {\n        classes.push('iconify--' + iconName.provider);\n    }\n    return { data, classes };\n}\n/**\n * Generate icon\n */\nfunction generateIcon(icon, props) {\n    return icon\n        ? render({\n            ...defaultIconProps,\n            ...icon,\n        }, props)\n        : null;\n}\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n};\n\nexports._api = _api;\nexports.addAPIProvider = addAPIProvider;\nexports.addCollection = addCollection;\nexports.addIcon = addIcon;\nexports.buildIcon = iconToSVG;\nexports.calculateSize = calculateSize;\nexports.checkIconState = checkIconState;\nexports.disableCache = disableCache;\nexports.enableCache = enableCache;\nexports.generateIcon = generateIcon;\nexports.getIcon = getIcon;\nexports.iconExists = iconExists;\nexports.listIcons = listIcons;\nexports.loadIcon = loadIcon;\nexports.loadIcons = loadIcons;\nexports.replaceIDs = replaceIDs;\n", null],
  "mappings": "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",
  "names": ["storage", "listIcons", "addIcon", "addCollection", "iconExists", "getIcon", "calculateSize", "replaceIDs", "addAPIProvider", "simpleNames", "instance", "send", "loadIcons", "loadIcon", "enableCache", "disableCache", "_window", "checkIconState", "generateIcon", "_api", "ctx"]
}
